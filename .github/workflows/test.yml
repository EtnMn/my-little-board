name: Test

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Test .NET projects and IAC
    runs-on: ubuntu-latest
    permissions:
      id-token: write # This is required for requesting the JWT
      pull-requests: write
    strategy:
      matrix:
        environment: [Production]
    environment: ${{ matrix.environment }}
    env:
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_OIDC: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkov
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          quiet: true
          framework: terraform
          output_format: github_failed_only
          soft_fail: false
          skip_check: CKV_AZURE_13,CKV_AZURE_17,CKV_AZURE_63,CKV_AZURE_65,CKV_AZURE_66,CKV_AZURE_88,CKV_AZURE_211,CKV_AZURE_212,CKV_AZURE_213,CKV_AZURE_214,CKV_AZURE_222,CKV_AZURE_225

      - uses: hashicorp/setup-terraform@v3

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: ./iac/environments/production

      - name: Terraform Init
        id: init
        run: terraform init -input=false -no-color
        working-directory: ./iac/environments/production

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./iac/environments/production

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan -no-color -input=false
        working-directory: ./iac/environments/production

      - name: add-plan-comment
        id: comment
        uses: actions/github-script@v3
        if: github.event_name == 'pull_request' && (success() || failure())
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output =`#### Checkov üß™\`${{ steps.checkov.outcome }}\`
            #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Checkov Results</summary>

            \`\`\`\n
            ${process.env.CHECKOV_RESULTS}
            \`\`\`

            </details>

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: ./global.json

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
              ${{ runner.os }}-nuget-

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: Test
        run: dotnet test --no-restore --configuration Release --verbosity normal
