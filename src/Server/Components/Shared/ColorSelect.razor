@using MudBlazor.Utilities

@inherits InputBase<string>

<div class="relative" @onfocusout=@(() => this.open = false)>
    <MudField Label="Color" OnAdornmentClick="() => this.open = !this.open" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.ArrowDropDown">
        <input type="button" Class="color-square rounded cursor-pointer" Style="@($"background:{this.CurrentValue}; width: 100%")" @onclick="() => this.open = true" />
    </MudField>
    <MudPopover Open="this.open" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopLeft" Class="mt-1">
        <MudPaper Class="palette d-flex flex-wrap gap-3 pa-4" Width="240px">
            @foreach (var item in CustomPalette)
            {
                <button style="@($"background:{item};")" class="@($"color-square {(this.IsActiveColor(item) ? "rounded-xl" : "rounded")}")" @onmousedown="() => { this.CurrentValue = item; }" />
            }
        </MudPaper>
    </MudPopover>
</div>

@code {
    private bool open = false;

    [Parameter]
    public bool Disabled { get; set; }

    protected override bool TryParseValueFromString(string? value, out string result, out string validationErrorMessage)
    {
        throw new InvalidOperationException();
    }

    protected override void OnParametersSet()
    {
        if (!this.CustomPalette.Any(x => string.Equals(x, CurrentValue, StringComparison.InvariantCultureIgnoreCase)))
        {
            this.CurrentValue = ColorConstants.ProjectDefaultColor;
        }
    }

    private bool IsActiveColor(string value) => string.Equals(this.CurrentValue, value, StringComparison.InvariantCultureIgnoreCase);

    public IEnumerable <string> CustomPalette { get; set; } = new string[]
    {
        Colors.Red.Default,
        Colors.Pink.Default,
        Colors.Purple.Default,
        Colors.DeepPurple.Default,
        Colors.Indigo.Default,
        Colors.Blue.Default,
        Colors.LightBlue.Default,
        Colors.Cyan.Default,
        Colors.Teal.Default,
        Colors.Green.Default,
        Colors.LightGreen.Default,
        Colors.Lime.Default,
        Colors.Yellow.Default,
        Colors.Amber.Default,
        Colors.Orange.Default,
        Colors.DeepOrange.Default,
        Colors.Brown.Default,
        Colors.BlueGray.Default,
        Colors.Gray.Default,
        Colors.Shades.Black,
    };
}
